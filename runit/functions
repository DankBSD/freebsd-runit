msg() {
	if [ -z "${JAILED}" ]; then
		# bold
		printf "\033[1m=> $@\033[m\n"
	else
		printf "=> $@\n"
	fi
}

msg_ok() {
	if [ -z "${JAILED}" ]; then
		# bold/green
		printf "\033[1m\033[32m OK\033[m\n"
	else
		printf " OK\n"
	fi
}

msg_error() {
	if [ -z "${JAILED}" ]; then
		# bold/red
		printf "\033[1m\033[31mERROR: $@\033[m\n"
	else
		printf "ERROR: $@\n"
	fi
}

msg_warn() {
	if [ -z "${JAILED}" ]; then
		# bold/yellow
		printf "\033[1m\033[33mWARNING: $@\033[m\n"
	else
		printf "WARNING: $@\n"
	fi
}

emergency_shell() {
	if [ -n "${JAILED}" ]; then
		exit 1
	fi
	# Try and load the USB keyboard driver in case
	# it's not yet loaded.  This can e.g. be the case when
	# using a modular kernel.
	kldload -n uhci xhci ohci ehci ukbd > /dev/null 2>&1 || true
	echo
	echo "Cannot continue due to errors above, starting emergency shell."
	echo "When ready type exit to continue booting."
	/bin/sh -p
}

check_osver_major() {
	local ver
	ver=$(/bin/freebsd-version -u)
	ver=${ver%.*}
	[ "${ver}" -eq "$1" ]
}

detect_jail() {
	if [ $(sysctl -n security.jail.jailed) -eq 1 ]; then
		export JAILED=1
	fi
}
